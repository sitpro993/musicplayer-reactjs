{"version":3,"sources":["components/Player/Controls.js","components/Player/Player.js","components/Player/Playlist.js","App.js","index.js"],"names":["Controls","props","className","onClick","setIsRepeat","isRepeat","icon","faRedoAlt","skipSong","faBackward","setIsPlaying","isPlaying","faPause","faPlay","faForward","setIsRandom","isRandom","faRandom","Player","audioEl","useRef","progressEl","cdEl","useState","cdWidth","setCdWidth","scrolled","setScrolled","controlsAnimation","useAnimation","spinTransition","loop","Infinity","duration","ease","useEffect","current","offsetWidth","window","addEventListener","scrollY","newWidth","style","width","opacity","play","start","rotate","pause","stop","src","songs","currentSongIndex","ref","onTimeUpdate","progressPercent","currentTime","value","onEnded","setCurrentSongIndex","temp","length","title","motion","div","backgroundImage","img_src","animate","transition","forwards","Math","floor","random","id","type","defaultValue","step","min","max","onChange","e","seekTime","target","Playlist","map","song","index","artist","faEllipsisV","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51f98e2e.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause, faForward, faBackward, faRedoAlt, faRandom } from '@fortawesome/free-solid-svg-icons'\nimport './controls.scss'\n\nfunction Controls(props) {\n\n\n    return (\n        <div className=\"control\">\n            <div className=\"btn btn-repeat\" onClick={() => props.setIsRepeat(!props.isRepeat)}>\n                <FontAwesomeIcon className={props.isRepeat ? \"active\" : \"\"} icon={faRedoAlt} />\n            </div>\n            <div className=\"btn btn-prev\" onClick={() => props.skipSong(false)}>\n                <FontAwesomeIcon icon={faBackward} />\n            </div>\n            <div className=\"btn btn-toggle-play\" onClick={() => props.setIsPlaying(!props.isPlaying)}>\n                <FontAwesomeIcon icon={props.isPlaying ? faPause : faPlay} />\n            </div>\n            <div className=\"btn btn-next\" onClick={() => props.skipSong()}>\n                <FontAwesomeIcon icon={faForward} />\n            </div>\n            <div className=\"btn btn-random\" onClick={() => props.setIsRandom(!props.isRandom)}>\n                <FontAwesomeIcon className={props.isRandom ? \"active\" : \"\"} icon={faRandom} />\n            </div>\n        </div>\n    )\n}\n\nexport default Controls\n","import React, { useState, useRef, useEffect } from 'react'\nimport Controls from './Controls';\nimport { motion, useAnimation } from 'framer-motion';\n\n\n\nfunction Player(props) {\n    const audioEl = useRef(null);\n    const progressEl = useRef(null)\n    const cdEl = useRef(null)\n    const [cdWidth, setCdWidth] = useState(0)\n    const [scrolled, setScrolled] = useState(0)\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isRepeat, setIsRepeat] = useState(false)\n    const [isRandom, setIsRandom] = useState(false)\n\n    const controlsAnimation = useAnimation()\n\n    const spinTransition = {\n        loop: Infinity,\n        duration: 10,\n        ease: 'linear'\n    }\n\n\n\n    //lấy ra width của cd\n    useEffect(() => {\n        setCdWidth(cdEl.current.offsetWidth)\n\n    }, [cdEl, cdWidth]);\n\n\n    //lấy ra giá trị scroll\n    window.addEventListener('scroll', () => {\n        setScrolled(window.scrollY)\n    })\n\n    //set width và opacity cho .cd khi scroll\n    if (cdEl.current) {\n        let newWidth = cdWidth - scrolled\n        cdEl.current.style.width = newWidth > 0 ? newWidth + 'px' : 0 + 'px'\n        cdEl.current.style.opacity = newWidth / cdWidth\n    }\n\n\n    //play hoặc pause phụ thuộc và giá trị isPlaying và cd quay\n    useEffect(() => {\n        if (isPlaying) {\n            audioEl.current.play();\n            controlsAnimation.start({\n                rotate: 360\n            })\n        } else {\n            audioEl.current.pause();\n            controlsAnimation.stop()\n        }\n    });\n\n\n\n\n    //làm chạy thanh progress\n    const setProgress = () => {\n        const progressPercent = audioEl.current.currentTime / audioEl.current.duration * 100\n        progressEl.current.value = progressPercent\n    }\n\n    //seek nhạc trên thanh progress\n    const seekMusic = (e) => {\n        const seekTime = audioEl.current.duration * e.target.value / 100\n        audioEl.current.currentTime = seekTime\n    }\n\n    //nextsong hoặc prevsong tùy vào chế độ random \n    const skipSong = (forwards = true) => {\n        if (forwards) {\n            if (isRandom === false) {\n                props.setCurrentSongIndex(() => {\n                    let temp = props.currentSongIndex;\n                    temp++;\n\n                    if (temp > props.songs.length - 1) {\n                        temp = 0;\n                    }\n                    return temp;\n                });\n            } else {\n                let temp = props.currentSongIndex\n                while (temp === props.currentSongIndex) {\n                    temp = Math.floor(Math.random() * (props.songs.length))\n                }\n                props.setCurrentSongIndex(temp)\n\n            }\n\n        } else {\n            if (isRandom === false) {\n                props.setCurrentSongIndex(() => {\n                    let temp = props.currentSongIndex;\n                    temp--;\n\n                    if (temp < 0) {\n                        temp = props.songs.length - 1;\n                    }\n\n                    return temp;\n                });\n            }\n            else {\n                let temp = props.currentSongIndex\n                while (temp === props.currentSongIndex) {\n                    temp = Math.floor(Math.random() * (props.songs.length))\n                }\n                props.setCurrentSongIndex(temp)\n            }\n\n        }\n    }\n\n    //tự động chuyển bài tùy vào chế độ random hay repeat\n    const nextAuto = () => {\n        if (isRepeat === false)\n            if (isRandom === false) {\n                props.setCurrentSongIndex(() => {\n                    let temp = props.currentSongIndex;\n                    temp++;\n                    if (temp > props.songs.length - 1) {\n                        temp = 0;\n                    }\n                    return temp;\n                });\n            } else {\n\n            }\n        else {\n            let temp = props.currentSongIndex\n            props.setCurrentSongIndex(temp)\n            audioEl.current.play()\n        }\n    }\n\n    return (\n\n        <div className=\"dashboard\">\n            <audio src={props.songs[props.currentSongIndex].src} ref={audioEl} onTimeUpdate={setProgress} onEnded={nextAuto}></audio>\n            <header>\n                <h4>Now playing:</h4>\n                <h2 >{props.songs[props.currentSongIndex].title}</h2>\n            </header>\n\n            <div className=\"cd\" ref={cdEl}>\n                <motion.div\n                    className=\"cd-thumb\"\n                    style={{ backgroundImage: `url(${props.songs[props.currentSongIndex].img_src})` }}\n                    animate={controlsAnimation}\n                    transition={spinTransition}\n\n                />\n            </div>\n            <Controls\n                isPlaying={isPlaying}\n                setIsPlaying={setIsPlaying}\n                skipSong={skipSong}\n                isRepeat={isRepeat}\n                setIsRepeat={setIsRepeat}\n                isRandom={isRandom}\n                setIsRandom={setIsRandom}\n\n            />\n            <input id=\"progress\" className=\"progress\" type=\"range\" defaultValue=\"0\" step=\"0.1\" min=\"0\" max=\"100\" ref={progressEl} onChange={seekMusic} />\n        </div>\n    )\n}\n\nexport default Player;\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\r\nimport './playlist.scss'\r\nfunction Playlist(props) {\r\n    return (\r\n        <div className=\"playlist\">\r\n            {\r\n                props.songs.map((song, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={index === props.currentSongIndex ? \"song active-list\" : \"song\"}\r\n                        onClick={() => props.setCurrentSongIndex(index)}\r\n                    >\r\n                        <div className=\"thumb\" style={{ backgroundImage: `url(${song.img_src})` }}>\r\n                        </div>\r\n                        <div className=\"body\" >\r\n                            <h3 className=\"title\">{song.title}</h3>\r\n                            <p className=\"author\">{song.artist}</p>\r\n                        </div>\r\n                        <div className=\"option\">\r\n                            <FontAwesomeIcon icon={faEllipsisV} />\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playlist;","import { useState } from 'react';\nimport Player from './components/Player/Player';\nimport './App.scss'\nimport Playlist from './components/Player/Playlist';\n\nfunction App() {\n  const [songs] = useState([\n    {\n      title: \"Cartoon - [NCS Release]\",\n      artist: \"On & On (feat. Daniel Levi)\",\n      img_src: \"./images/song-1.png\",\n      src: \"./music/song-1.mp3\"\n    },\n    {\n      title: 'Thở',\n      artist: 'Da LAB ft. Juky San',\n      img_src: \"./images/song-2.png\",\n      src: \"./music/song-2.mp3\"\n    },\n    {\n      title: 'Bad Habits',\n      artist: 'Ed Sheeran',\n      img_src: \"./images/song-3.png\",\n      src: \"./music/song-3.mp3\"\n    },\n    {\n      title: 'Begin',\n      artist: 'Gaho',\n      img_src: \"./images/song-4.png\",\n      src: \"./music/song-4.mp3\"\n    },\n    {\n      title: 'Diamond',\n      artist: 'Ha Hyun Woo (Guckkasten)',\n      img_src: \"./images/song-5.png\",\n      src: \"./music/song-5.mp3\"\n    },\n    {\n      title: 'With you(Ngẫu hứng)',\n      artist: 'Nick Strand, Hoaprox, Mio',\n      img_src: \"./images/song-6.png\",\n      src: \"./music/song-6.mp3\"\n    },\n    {\n      title: 'Khi em lớn',\n      artist: 'Orange, Hoàng Dũng',\n      img_src: \"./images/song-7.png\",\n      src: \"./music/song-7.mp3\"\n    },\n    {\n      title: 'Trốn tìm',\n      artist: 'Đen vâu',\n      img_src: \"./images/song-8.png\",\n      src: \"./music/song-8.mp3\"\n    },\n    {\n      title: 'I do',\n      artist: '911 band',\n      img_src: \"./images/song-9.png\",\n      src: \"./music/song-9.mp3\"\n    },\n    {\n      title: 'Believer',\n      artist: 'Imagine dragon',\n      img_src: \"./images/song-10.png\",\n      src: \"./music/song-10.mp3\"\n    },\n\n  ]);\n\n\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  // const [nextSongIndex, setNextSongIndex] = useState(0);\n\n  // useEffect(() => {\n  //   setNextSongIndex(() => {\n  //     if (currentSongIndex + 1 > songs.length - 1) {\n  //       return 0;\n  //     } else {\n  //       return currentSongIndex + 1;\n  //     }\n  //   });\n  // }, [currentSongIndex, songs.length]);\n\n\n\n  return (\n    <div className=\"player\" >\n      <Player\n        currentSongIndex={currentSongIndex}\n        setCurrentSongIndex={setCurrentSongIndex}\n        //nextSongIndex={nextSongIndex}\n        songs={songs}\n      />\n      <Playlist\n        songs={songs}\n        currentSongIndex={currentSongIndex}\n        setCurrentSongIndex={setCurrentSongIndex}\n\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}